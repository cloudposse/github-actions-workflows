name: |-
  CI - Promote or build Docker image
  
  Promote or build Docker image and push it to ECR
  
  ### Usage 

  ```yaml
    name: Deploy
    on:
      push:
        branches: [ main ]

    jobs:
      ci:
        uses: cloudposse/github-actions-workflows/.github/workflows/ci-dockerized-app-promote-or-build.yml@main
        with:
          organization: $\{\{ github.event.repository.owner.login \}\}
          repository: $\{\{ github.event.repository.name \}\}
          force-build: false
        secrets:
          ecr-region: $\{\{ secrets.ecr-region \}\}
          ecr-iam-role: $\{\{ secrets.ecr-iam-role \}\}
          registry: $\{\{ secrets.registry \}\}
          secret-outputs-passphrase: $\{\{ secrets.secret-outputs-passphrase \}\}
  ```
on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: true
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: true
        type: string
      app:
        description: "Application name. Used with monorepo pattern when there are several applications in the repo"
        required: true
        type: string
      force-build:
        description: "Force build (skip promotion)"
        default: false
        required: true
        type: boolean
      matrix-step-name:
        description: "Matrix step name - matrix output workaround. [Read more](https://github.com/cloudposse/github-action-matrix-outputs-write#introduction)"
        required: false
        type: string
      matrix-key:
        description: "Matrix key - matrix output workaround. [Read more](https://github.com/cloudposse/github-action-matrix-outputs-write#introduction)"
        required: false
        type: string
    secrets:
      ecr-region:
        description: "ECR AWS region"
        required: true
      ecr-iam-role:
        description: "IAM Role ARN provide ECR write/read access"
        required: true
      secret-outputs-passphrase:
        description: "Passphrase to encrypt/decrypt secret outputs with gpg. For more information [read](https://github.com/cloudposse/github-action-secret-outputs)"
        required: true
      registry:
        description: "ECR Docker registry"
        required: true
    outputs:
      image:
        description: "Docker Image"
        value: ${{ jobs.promote-or-build.outputs.image }}
      tag:
        description: "Docker image tag"
        value: ${{ jobs.promote-or-build.outputs.tag }}

permissions:
  id-token: write
  contents: read

jobs:
  promote-or-build:
    name: promote or build
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: ${{ secrets.ecr-region }}
          role-to-assume: ${{ secrets.ecr-iam-role }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get previous commit
        if: ${{ ! inputs.force-build }}
        id: prev-commit
        run: echo "sha=$(git rev-parse --verify HEAD^1)" >> $GITHUB_OUTPUT

      - uses: cloudposse/github-action-docker-promote@0.3.0
        if: ${{ ! inputs.force-build }}
        id: promote
        continue-on-error: true
        with:
          registry: ${{ secrets.registry }}
          organization: ${{ inputs.organization }}
          repository: ${{ inputs.repository }}/${{ inputs.app }}
          from: sha-${{ steps.prev-commit.outputs.sha }}
          to: sha-${{ github.sha }}
          use_metadata: true

      - name: Build
        if: ${{ inputs.force-build || steps.promote.outcome == 'failure' }}
        id: build
        uses: cloudposse/github-action-docker-build-push@1.16.0
        with:
          organization: ${{ inputs.organization }}
          repository: ${{ inputs.repository }}/${{ inputs.app }}
          registry: ${{ secrets.registry }}
          workdir: ./apps/${{ inputs.app }}

      - uses: cloudposse/github-action-yaml-config-query@0.1.3
        id: result
        with:
          ## There is a bug in GHA - skipped step return `success` outcome. So we can not rely only on steps.build.outcome
          query: .${{ steps.build.outcome == 'success' && ( inputs.force-build || steps.promote.outcome == 'failure' ) }}
          config: |-
            true:
              builded: true
              image: ${{ steps.build.outputs.image }}
              tag: ${{ steps.build.outputs.tag }}
            false:
              builded: false
              image: ${{ steps.promote.outputs.image }}
              tag: ${{ steps.promote.outputs.tag }}

      - uses: cloudposse/github-action-secret-outputs@0.1.2
        id: image
        with:
          secret: ${{ secrets.secret-outputs-passphrase }}
          op: encode
          in: ${{ steps.result.outputs.image }}

      - uses: cloudposse/github-action-matrix-outputs-write@1.0.0
        id: outputs
        with:
          matrix-step-name: ${{ inputs.matrix-step-name }}
          matrix-key: ${{ inputs.matrix-key }}
          outputs: |
            image: ${{ steps.image.outputs.out }}
            tag: ${{ steps.result.outputs.tag }}            

    outputs:
      builded: ${{ steps.result.outputs.builded }}
      image: ${{ fromJson(steps.outputs.outputs.result).image }}
      tag: ${{ fromJson(steps.outputs.outputs.result).tag }}

  test:
    runs-on: ubuntu-latest
    if: ${{ needs.promote-or-build.outputs.builded == 'true' }}
    needs: [ promote-or-build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: ${{ secrets.ecr-region }}
          role-to-assume: ${{ secrets.ecr-iam-role }}

      - name: Tests
        id: test
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
        with:
          workdir: ./apps/${{ inputs.app }}
          file: test/docker-compose.yml
          service: app
          command: test/test.sh
          registry: ${{ secrets.registry }}

