name: |-
  CD - Deploy to ECS with Ecspresso
  
  Deploy Docker image to ECS with Ecspresso
  
  ### Usage 
  
  ```yaml
    name: Deploy
    on:
      push:
        branches: [ main ]
  
    jobs:
      cd:
        uses: cloudposse/github-actions-workflows/.github/workflows/cd-ecspresso.yml@main
        with:
          image: registry.hub.docker.com/library/nginx
          tag: latest
          repository: $\{\{ github.event.repository.name \}\}
          environment: dev
          enable-migration: $\{\{ inputs.enable-migration \}\}
          support-rollback: $\{\{ inputs.support-rollback \}\}
        secrets:
          secret-outputs-passphrase: "$\{\{ secrets.secret-outputs-passphrase \}\}"
          github-private-actions-pat: $\{\{ secrets.github-private-actions-pat \}\}  
  ```

on:
  workflow_call:
    inputs:
      image:
        description: "Docker Image to deploy"
        required: true
        type: string
      tag:
        description: "Docker Image tag to deploy"
        required: true
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: true
        type: string
      app:
        description: "Application name. Used with monorepo pattern when there are several applications in the repo"
        required: false
        type: string
      environment:
        description: "Environment name deploy to"
        type: string
        required: true
      path:
        description: "The path tp task definition template json file."
        required: false
        default: ./deploy/taskdef.json
        type: string
      enable-migration:
        description: "Run DB migration"
        type: boolean
        required: false
        default: false
      support-rollback:
        description: "Perform rollback on failure"
        type: boolean
        required: false
        default: false
      matrix-step-name:
        description: "Matrix step name - matrix output workaround. [Read more](https://github.com/cloudposse/github-action-matrix-outputs-write#introduction)"
        required: false
        type: string
      matrix-key:
        description: "Matrix key - matrix output workaround. [Read more](https://github.com/cloudposse/github-action-matrix-outputs-write#introduction)"
        required: false
        type: string
      runs-on:
        description: "Overrides job runs-on setting (json-encoded list)"
        type: string
        required: false
        default: '["ubuntu-latest"]'
    secrets:
      secret-outputs-passphrase:
        description: "Passphrase to encrypt/decrypt secret outputs with gpg. For more information [read](https://github.com/cloudposse/github-action-secret-outputs)"
        required: true
      github-private-actions-pat:
        description: "Github PAT allow to pull private repos"
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.result.outputs.webapp-url }}
    steps:
      - uses: cloudposse/github-action-secret-outputs@0.1.2
        id: image
        with:
          secret: ${{ secrets.secret-outputs-passphrase }}
          op: decode
          in: ${{ inputs.image }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Environment Info
        uses: cloudposse/github-action-interface-environment@0.4.0
        id: environment
        with:
          implementation_repository: cloudposse/actions-private
          implementation_path: 'ecspresso-environments'
          implementation_ref: main
          implementation_github_pat: ${{ secrets.github-private-actions-pat }}
          environment: ${{ inputs.environment }}
          namespace: ${{ inputs.environment }}
          repository: ${{ inputs.repository }}
          application: ${{ inputs.app }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: ${{ steps.environment.outputs.region }}
          role-to-assume: ${{ steps.environment.outputs.role }}-gha
          role-skip-session-tagging: true

      - name: Run DB Migration
        uses: cloudposse/github-action-run-ecspresso@0.2.0
        continue-on-error: true
        if: ${{ inputs.enable-migration }}
        id: db_migrate
        with:
          image: ${{ steps.image.outputs.out }}
          image-tag: ${{ inputs.tag }}
          region: ${{ steps.environment.outputs.region }}
          debug: false
          cluster: ${{ steps.environment.outputs.cluster }}
          application: ${{ steps.environment.outputs.name }}
          taskdef-path: ${{ inputs.path }}
          overrides: |-
            {
              "containerOverrides":[
                {
                  "name": "app",
                  "environment": [{
                    "name": "RUN_DB_MIGRATION",
                    "value": "true"
                  }]
                }
              ]
            }
        env:
          STAGE:  ${{ steps.environment.outputs.stage }}
          AWS_ACCOUNT_ID:  ${{ steps.environment.outputs.account-id }}
          ECS_SERVICE_NAME: ${{ steps.environment.outputs.name }}
          ECS_SERVICE_TASK_ROLE: ${{ steps.environment.outputs.role }}-task
          ECS_SERVICE_EXECUTION_ROLE: ${{ steps.environment.outputs.role }}-exec

      - name: Deploy
        uses: cloudposse/github-action-deploy-ecspresso@0.5.0
        continue-on-error: true
        if: ${{ steps.db_migrate.outcome != 'failure' }}
        id: deploy
        with:
          image: ${{ steps.image.outputs.out }}
          image-tag: ${{ inputs.tag }}
          region: ${{ steps.environment.outputs.region }}
          operation: deploy
          debug: false
          cluster: ${{ steps.environment.outputs.cluster }}
          application: ${{ steps.environment.outputs.name }}
          taskdef-path: ${{ inputs.path }}
          mirror_to_s3_bucket: ${{ steps.environment.outputs.s3-bucket }}
          timeout: 10m
        env:
          STAGE:  ${{ steps.environment.outputs.stage }}
          AWS_ACCOUNT_ID:  ${{ steps.environment.outputs.account-id }}
          ECS_SERVICE_NAME: ${{ steps.environment.outputs.name }}
          ECS_SERVICE_TASK_ROLE: ${{ steps.environment.outputs.role }}-task
          ECS_SERVICE_EXECUTION_ROLE: ${{ steps.environment.outputs.role }}-exec

      - name: Run DB Rollback
        uses: cloudposse/github-action-run-ecspresso@0.2.0
        if: ${{ inputs.enable-migration && inputs.support-rollback && ( steps.db_migrate.outcome == 'failure' || steps.deploy.outcome == 'failure' ) }}
        id: db_rollback
        with:
          image: ${{ steps.image.outputs.out }}
          image-tag: ${{ inputs.tag }}
          region: ${{ steps.environment.outputs.region }}
          debug: false
          cluster: ${{ steps.environment.outputs.cluster }}
          application: ${{ steps.environment.outputs.name }}
          taskdef-path: ${{ inputs.path }}
          overrides: |-
            {
              "containerOverrides":[
                {
                  "name": "app",
                  "environment": [{
                    "name": "RUN_DB_ROLLBACK",
                    "value": "true"
                  }]
                }
              ]
            }
        env:
          STAGE:  ${{ steps.environment.outputs.stage }}
          AWS_ACCOUNT_ID:  ${{ steps.environment.outputs.account-id }}
          ECS_SERVICE_NAME: ${{ steps.environment.outputs.name }}
          ECS_SERVICE_TASK_ROLE: ${{ steps.environment.outputs.role }}-task
          ECS_SERVICE_EXECUTION_ROLE: ${{ steps.environment.outputs.role }}-exec

      - name: Fail
        if: ${{ steps.db_migrate.outcome == 'failure' || steps.deploy.outcome == 'failure' }}
        uses: cutenode/action-always-fail@v1.0.1

      - uses: Produce8/actions-aws-ssm-params-to-env@1.1.0
        with:
          ssm-path: ${{ steps.environment.outputs.ssm-path }}
          prefix: SSM_URL_
          decryption: true

      - name: Output web app url
        id: result
        run: |
          echo "webapp-url=${SSM_URL_0}" >> $GITHUB_OUTPUT
